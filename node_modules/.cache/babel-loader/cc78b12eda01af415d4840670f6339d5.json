{"ast":null,"code":"var __extends = this && this.__extends || function () {\n  var extendStatics = function (d, b) {\n    extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    };\n    return extendStatics(d, b);\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nimport React from \"react\";\nimport { classSelectors } from \"../utils/selectors\";\nimport { ContentEditable } from \"./ContentEditable\";\nvar Tag = function (_super) {\n  __extends(Tag, _super);\n  function Tag() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n    _this.innerEditableRef = React.createRef();\n    _this.remove = function () {\n      return _this.props.remove(_this.props.index);\n    };\n    return _this;\n  }\n  Tag.prototype.render = function () {\n    var _a = this.props,\n      value = _a.value,\n      index = _a.index,\n      editable = _a.editable,\n      inputRef = _a.inputRef,\n      validator = _a.validator,\n      update = _a.update,\n      readOnly = _a.readOnly,\n      removeOnBackspace = _a.removeOnBackspace;\n    var tagRemoveClass = !readOnly ? classSelectors.tagRemove : classSelectors.tagRemove + \" \" + classSelectors.tagRemoveReadOnly;\n    return React.createElement(\"div\", {\n      className: classSelectors.tag\n    }, !editable && React.createElement(\"div\", {\n      className: classSelectors.tagContent\n    }, value), editable && React.createElement(ContentEditable, {\n      value: value,\n      inputRef: inputRef,\n      innerEditableRef: this.innerEditableRef,\n      className: classSelectors.tagContent,\n      change: function (newValue) {\n        return update(index, newValue);\n      },\n      remove: this.remove,\n      validator: validator,\n      removeOnBackspace: removeOnBackspace\n    }), React.createElement(\"div\", {\n      className: tagRemoveClass,\n      onClick: this.remove\n    }));\n  };\n  return Tag;\n}(React.Component);\nexport { Tag };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAAQC,cAAc,QAAO,oBAAoB;AACjD,SAAQC,eAAe,QAAO,mBAAmB;AAcjD;EAAyBC;EAAzB;IAAA;IAEEC,sBAAgB,GAAoCJ,KAAK,CAACK,SAAS,EAAE;IAErED,YAAM,GAAG;MAAM,YAAI,CAACE,KAAK,CAACC,MAAM,CAACH,KAAI,CAACE,KAAK,CAACE,KAAK,CAAC;IAAnC,CAAmC;;EA8BpD;EA5BEC,oBAAM,GAAN;IAEQ,mBAAiG;MAA/FC,gBAAK;MAAEF,gBAAK;MAAEG,sBAAQ;MAAEC,sBAAQ;MAAEC,wBAAS;MAAEC,kBAAM;MAAEC,sBAAQ;MAAEC,wCAAgC;IAEvG,IAAMC,cAAc,GAAG,CAACF,QAAQ,GAC9Bd,cAAc,CAACiB,SAAS,GAAMjB,cAAc,CAACiB,SAAS,SAAIjB,cAAc,CAACkB,iBAAmB;IAE9F,OACEnB;MAAKoB,SAAS,EAAEnB,cAAc,CAACoB;IAAG,GAC/B,CAACV,QAAQ,IAAIX;MAAKoB,SAAS,EAAEnB,cAAc,CAACqB;IAAU,GAAGZ,KAAK,CAAO,EACrEC,QAAQ,IACPX,oBAACE,eAAe;MACdQ,KAAK,EAAEA,KAAK;MACZE,QAAQ,EAAEA,QAAQ;MAClBW,gBAAgB,EAAE,IAAI,CAACA,gBAAgB;MACvCH,SAAS,EAAEnB,cAAc,CAACqB,UAAU;MACpCE,MAAM,EAAE,UAACC,QAAQ;QAAK,aAAM,CAACjB,KAAK,EAAEiB,QAAQ,CAAC;MAAvB,CAAuB;MAC7ClB,MAAM,EAAE,IAAI,CAACA,MAAM;MACnBM,SAAS,EAAEA,SAAS;MACpBG,iBAAiB,EAAEA;IAAiB,EAEvC,EACDhB;MAAKoB,SAAS,EAAEH,cAAc;MAAES,OAAO,EAAE,IAAI,CAACnB;IAAM,EAAG,CACnD;EAGV,CAAC;EAEH,UAAC;AAAD,CAAC,CAlCwBP,KAAK,CAAC2B,SAAS","names":["React","classSelectors","ContentEditable","__extends","_this","createRef","props","remove","index","Tag","value","editable","inputRef","validator","update","readOnly","removeOnBackspace","tagRemoveClass","tagRemove","tagRemoveReadOnly","className","tag","tagContent","innerEditableRef","change","newValue","onClick","Component"],"sources":["/home/abhilash/Desktop/new1-blog/node_modules/@pathofdev/react-tag-input/src/components/Tag.tsx"],"sourcesContent":["import React from \"react\";\nimport {classSelectors} from \"../utils/selectors\";\nimport {ContentEditable} from \"./ContentEditable\";\n\ninterface Props {\n  value: string;\n  index: number;\n  editable: boolean;\n  readOnly: boolean;\n  inputRef: React.RefObject<HTMLInputElement>;\n  update: (i: number, value: string) => void;\n  remove: (i: number) => void;\n  validator?: (val: string) => boolean;\n  removeOnBackspace?: boolean;\n}\n\nexport class Tag extends React.Component<Props> {\n\n  innerEditableRef: React.RefObject<HTMLDivElement> = React.createRef();\n\n  remove = () => this.props.remove(this.props.index);\n\n  render() {\n\n    const { value, index, editable, inputRef, validator, update, readOnly, removeOnBackspace } = this.props;\n\n    const tagRemoveClass = !readOnly ?\n      classSelectors.tagRemove : `${classSelectors.tagRemove} ${classSelectors.tagRemoveReadOnly}`;\n\n    return (\n      <div className={classSelectors.tag}>\n        {!editable && <div className={classSelectors.tagContent}>{value}</div>}\n        {editable && (\n          <ContentEditable\n            value={value}\n            inputRef={inputRef}\n            innerEditableRef={this.innerEditableRef}\n            className={classSelectors.tagContent}\n            change={(newValue) => update(index, newValue)}\n            remove={this.remove}\n            validator={validator}\n            removeOnBackspace={removeOnBackspace}\n          />\n        )}\n        <div className={tagRemoveClass} onClick={this.remove}/>\n      </div>\n    );\n\n  }\n\n}\n"]},"metadata":{},"sourceType":"module"}